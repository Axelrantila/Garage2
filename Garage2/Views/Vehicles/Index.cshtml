@model IEnumerable<Garage2.Models.Vehicle>

@{
	var filterOld = Request.Params["filterOld"];
	if ( filterOld == null ) { filterOld = bool.TrueString; }

	var sortByParam = Request.Params["sortBy"];
	if ( sortByParam == null ) { sortByParam = "TimeParked"; }

	string linkText = (filterOld == bool.TrueString ? "Include no longer parked vehicles" : "Exclude no longer parked vehicles");
	string filterParam = (filterOld == bool.TrueString ? bool.FalseString : bool.TrueString);

	var sortedColumnHeader = new { @class = "ColHeaderSorted" };
	var columnHeader = new { @class = "ColHeader" };

	ViewBag.Title = "Parked Vehicles";
}

<h2>Parked Vehicles</h2>

@*<p>
	@Html.ActionLink("Create New", "Create")
</p>*@

<table class="table">
	<tr>
		<th>
			@Html.ActionLink(linkText: "Parking lots", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "ParkingLots", filterOld = filterOld }, htmlAttributes: (sortByParam == "ParkingLots" ? sortedColumnHeader : columnHeader))
		</th>
		<th>
			@Html.ActionLink(linkText: "Owner", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "Owner", filterOld = filterOld }, htmlAttributes: (sortByParam == "Owner" ? sortedColumnHeader : columnHeader))
		</th>

		<th>
			@Html.ActionLink(linkText: "LicenseNr", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "LicenseNr", filterOld = filterOld }, htmlAttributes: (sortByParam == "LicenseNr" ? sortedColumnHeader : columnHeader))
		</th>

		<th>
			@Html.ActionLink(linkText: "TypeOfVehicle", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "TypeOfVehicle", filterOld = filterOld }, htmlAttributes: (sortByParam == "TypeOfVehicle" ? sortedColumnHeader : columnHeader))
		</th>

		<th>
			@Html.ActionLink(linkText: "Length", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "Length", filterOld = filterOld }, htmlAttributes: (sortByParam == "Length" ? sortedColumnHeader : columnHeader))
		</th>

		<th>
			@Html.ActionLink(linkText: "Weight", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "Weight", filterOld = filterOld }, htmlAttributes: (sortByParam == "Weight" ? sortedColumnHeader : columnHeader))
		</th>

		<th>
			@Html.ActionLink(linkText: "TimeParked", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "TimeParked", filterOld = filterOld }, htmlAttributes: (sortByParam == "TimeParked" ? sortedColumnHeader : columnHeader))
		</th>
		@{
			if (filterOld == bool.FalseString)
			{
		<th>
					@Html.ActionLink(linkText: "Parked", actionName: "SortBy", controllerName: "Vehicles", routeValues: new { sortby = "Parked", filterOld = filterOld }, htmlAttributes: (sortByParam == "Parked" ? sortedColumnHeader : columnHeader))
		</th>
			}
		}
		<th></th>

	</tr>

    @foreach ( var item in Model ) {
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.ParkingLot)
			</td>

			<td>
                @Html.DisplayFor( modelItem => item.Owner )
			</td>

			<td>
                @Html.DisplayFor( modelItem => item.LicenseNr )
			</td>

			<td>
                @Html.DisplayFor( modelItem => item.TypeOfVehicle )
			</td>

			<td>
                @Html.DisplayFor( modelItem => item.Length )
			</td>

			<td>
                @Html.DisplayFor( modelItem => item.Weight )
			</td>

			<td>
                @Html.DisplayFor( modelItem => item.TimeParked )
			</td>
			@{
				if (filterOld == bool.FalseString)
				{
			<td>
                @Html.DisplayFor( modelItem => item.Parked )
			</td>
				}
			}
			@*<td>
					@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
					@Html.ActionLink("Details", "Details", new { id=item.Id }) |
					@Html.ActionLink("Delete", "Delete", new { id=item.Id })
				</td>*@
		</tr>
	}

</table>


<h6>@Html.ActionLink( linkText: linkText, actionName: "OldVehicles", controllerName: "Vehicles", routeValues: new { sortBy = sortByParam, filterOld = filterParam }, htmlAttributes: null )</h6>
