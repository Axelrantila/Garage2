@model Garage2.Models.Vehicle
@using Garage2.Models

<tr id=@String.Format("vehicleTableRow{0}",Model.Id)>
    <td>
        @(Model.Parked
            ?
            (Garage.NrOfLotsRequired[Model.TypeOfVehicle] > 1
            ? String.Format("{0} - {1}", Model.ParkingLot, Model.ParkingLot + (int)Garage.NrOfLotsRequired[Model.TypeOfVehicle] - 1)
            : Model.ParkingLot.ToString())
           :
           "")
    </td>
    <td>
        @Html.DisplayFor( modelItem => Model.Owner )
    </td>
    <td>
        @Html.DisplayFor(modelItem => Model.Member.Name)
    </td>
    <td>
        @Html.DisplayFor( modelItem => Model.LicenseNr )
    </td>
    <td>
        @Html.DisplayFor( modelItem => Model.TypeOfVehicle )
    </td>
    <td>
        @Html.DisplayFor( modelItem => Model.Length )
    </td>
    <td>
        @Html.DisplayFor( modelItem => Model.Weight )
    </td>
    <td>
        @Html.DisplayFor( modelItem => Model.MakeAndModel )
    </td>

    <td>
        @Html.DisplayFor( modelItem => Model.Color )
    </td>

    <td>
        @Html.DisplayFor( modelItem => Model.NrOfWheels )
    </td>

    <td>
        @(Model.Parked ? Html.DisplayFor( modelItem => Model.TimeParked ) : new MvcHtmlString( "" ))
    </td>

    <td>
        @if ( Model.Parked ) {
            <input type="button" value="Check out"  onclick="togglePark(@Model.Id)" />
        }

        <!--input @(Model.Parked ? "checked" : "") class="check-box" type="checkbox" onclick="togglePark(@Model.Id)" / -->

        @(ViewBag.FailedParkMessage != null ? Html.Raw( "<span>" + ViewBag.FailedParkMessage + "</span>" ) : "")
    </td>
</tr>
