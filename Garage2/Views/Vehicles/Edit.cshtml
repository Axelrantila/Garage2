@model Garage2.Models.Vehicle

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Vehicle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class="control-label col-md-2">Owner of the vehicle</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Registration number</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LicenseNr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicenseNr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Type of Vehicle</label>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TypeOfVehicle, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeOfVehicle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Make and Model</label>
            <div class="col-md-10">
                @Html.EditorFor( model => model.MakeAndModel, new { htmlAttributes = new { @class = "form-control" } } )
                @Html.ValidationMessageFor( model => model.MakeAndModel, "", new { @class = "text-danger" } )
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Color</label>
            <div class="col-md-10">
                @Html.EditorFor( model => model.Color, new { htmlAttributes = new { @class = "form-control" } } )
                @Html.ValidationMessageFor( model => model.Color, "", new { @class = "text-danger" } )
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Length (meters)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Weight (kg)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Number of Wheels</label>
            <div class="col-md-10">
                @Html.EditorFor( model => model.NrOfWheels, new { htmlAttributes = new { @class = "form-control" } } )
                @Html.ValidationMessageFor( model => model.NrOfWheels, "", new { @class = "text-danger" } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Parked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Parked)
                    @Html.ValidationMessageFor(model => model.Parked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <p>
    @Html.ActionLink( "Back to List", "Index" )
    @(Model.Parked ? new MvcHtmlString("") : Html.ActionLink( "| Delete", "Delete", new { id = Model.Id } ))
    </p>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
